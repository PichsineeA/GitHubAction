slice_name: SI5 - Breaches Overview
viz_type: table
params:
  adhoc_filters:
  - clause: WHERE
    comparator:
    - Other
    expressionType: SIMPLE
    filterOptionName: filter_e2fp5uy4qug_b7h5opad7rb
    isExtra: false
    isNew: false
    operator: NOT IN
    operatorId: NOT_IN
    sqlExpression: null
    subject: merge_date
  all_columns: []
  color_pn: false
  column_config:
    total_closed:
      d3NumberFormat: ',d'
      d3SmallNumberFormat: ',d'
      showCellBars: false
    total_notified:
      d3NumberFormat: ',d'
      d3SmallNumberFormat: ',d'
      showCellBars: false
    total_void:
      d3NumberFormat: ',d'
      d3SmallNumberFormat: ',d'
      showCellBars: false
  conditional_formatting: []
  datasource: 97__table
  extra_form_data: {}
  granularity_sqla: update_datetime
  groupby:
  - merge_date
  metrics:
  - total_notified
  - total_closed
  - total_void
  order_by_cols: []
  order_desc: false
  percent_metrics: []
  query_mode: aggregate
  row_limit: 10000
  server_page_length: 10
  show_cell_bars: false
  slice_id: 532
  table_timestamp_format: smart_date
  time_grain_sqla: P1D
  time_range: No filter
  timeseries_limit_metric:
    aggregate: MAX
    column:
      certification_details: null
      certified_by: null
      column_name: merge_date_number
      description: null
      expression: "CASE      WHEN CASE\n                    WHEN breach_status not\
        \ in ('Void') and notified_mc_date is not null then notified_mc_date::date\
        \ \n                    WHEN breach_status not in ('Void') and original_closed_date\
        \ is not null then original_closed_date::date\n                    WHEN breach_status\
        \ = 'Void' then void_date::date\n                END = current_date::date\
        \ then 0\n          WHEN CASE\n                    WHEN breach_status not\
        \ in ('Void') and notified_mc_date is not null then notified_mc_date::date\
        \ \n                    WHEN breach_status not in ('Void') and original_closed_date\
        \ is not null then original_closed_date::date\n                    WHEN breach_status\
        \ = 'Void' then void_date::date\n                END = case \twhen extract(dow\
        \ from current_date) in (0,6,1) \n\t\t\t\t\t\t\t\tthen (date_trunc('week',\
        \ current_date)- interval '1 weeks') + interval '4 days'\n\t\t\t\t\t\t\tELSE\
        \ current_date - interval '1 days' end then 1\t\t                \n      \
        \     ELSE 2\n       END"
      filterable: true
      groupby: true
      id: 2000000075
      is_certified: false
      is_dttm: null
      python_date_format: null
      type: NUMERIC
      type_generic: 0
      verbose_name: Day Number
      warning_markdown: null
    expressionType: SIMPLE
    hasCustomLabel: false
    isNew: false
    label: MAX(Day Number)
    optionName: metric_2kthzrweuny_emq1nr1qtxf
    sqlExpression: null
  url_params: {}
  viz_type: table
cache_timeout: null
uuid: f0e04b2c-f758-4e72-957b-19e19e312262
version: 1.0.0
dataset_uuid: 9f0a237b-3856-4149-9f7b-70e2e9a25367
